name: Terraform Apply

on:
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        workspace: [backend]
        backend-tfvars: [tfvars/backend.tfvars]

    env:
      TF_WORKSPACE: ${{ matrix.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Configure AWS credentials via Role to assume
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Configure AWS credentials via access keys
        if: steps.configure-aws-credentials.outcome == 'success'
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: AWS STS Get Caller Identity
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config=${{ matrix.backend-tfvars }}
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -auto-approve -var-file=${{ matrix.backend-tfvars }}
        continue-on-error: true
